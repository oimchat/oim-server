server.port = 10000
spring.application.name = oim-server

only.action.dispatcher.response-handle-enable=true
only.action.dispatcher.error-code-prefix=2
only.action.dispatcher.error-code-separator=.

only.action.dispatcher.spring-response-handle-enable = true

only.action.dispatcher.response-handle-exclude-paths[0] =[{"path":"/doc/*"},{"path":"/doc/**"}]
only.action.dispatcher.response-handle-exclude-paths[1] =[{"path":"/actuator"},{"path":"/actuator/*"}]

only.action.dispatcher.response-handle-exclude-paths[2] =[{"path":"/v1/head/**"},{"path":"/v1/main/file/**"},{"path":"/v1/picture/**"}]


# 管理客户端长连接的TCP服务端口
spring.wofa.server.net.netty.tcp-servers[0].port=10001

spring.wofa.server.net.netty.web-socket-servers[0].port=10002
spring.wofa.server.net.netty.web-socket-servers[0].path=/oim

spring.profiles.active = config


spring.aware.log4j2.loggers= [{"name": "com.oimchat","level": "info"}, \
			    {"name": "java.sql","level": "debug"},{"name": "org.hibernate.SQL","level": "debug"},{"name": "org.hibernate.jdbc","level": "debug"},{"name": "org.apache.shardingsphere","level": "debug"}]

# hibernate配置
# create,update
spring.aware.hibernate.setting.hbm2ddl.auto=update
spring.aware.hibernate.entity-packages[0]=com.oimchat.server

# H2
spring.aware.hibernate.setting.dialect=org.hibernate.dialect.H2Dialect
# MySQL
#spring.aware.hibernate.setting.dialect=org.hibernate.dialect.MySQL8Dialect
# Oracle数据库试过10g和11g其他未知
#spring.aware.hibernate.setting.dialect=org.hibernate.dialect.Oracle10gDialect
# SQL Server测试过2017版
#spring.aware.hibernate.setting.dialect=org.hibernate.dialect.SQLServerDialect


# 数据库配置，默认集成了sharding-jdbc,有需要分库分表的可以使用 具体配置看官网
# false：关闭sharding-jdbc使用druid
# true：关闭druid使用sharding-jdbc
spring.shardingsphere.enabled=false

#
##数据库配置
#spring.shardingsphere.datasource.names=master0
#
### 节点0，主库
#spring.shardingsphere.datasource.master0.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.master0.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.shardingsphere.datasource.master0.url=jdbc:mysql://127.0.0.1:3306/oim?serverTimezone=GMT%2B8&useUnicode=true&&useSSL=false&useCompression=true&zeroDateTimeBehavior=convertToNull&allowPublicKeyRetrieval=true
#spring.shardingsphere.datasource.master0.username=root
#spring.shardingsphere.datasource.master0.password=123456
#spring.shardingsphere.datasource.master0.web-stat-filter.enabled=false
#spring.shardingsphere.datasource.master0.stat-view-servlet.enabled=false
#spring.shardingsphere.datasource.master0.initial-size=5
#spring.shardingsphere.datasource.master0.max-active=100
#spring.shardingsphere.datasource.master0.min-idle=5
#spring.shardingsphere.datasource.master0.max-wait=60000
#spring.shardingsphere.datasource.master0.min-evictable-idle-time-millis=300000
#spring.shardingsphere.datasource.master0.validation-query=SELECT 1 FROM DUAL
#spring.shardingsphere.datasource.master0.test-while-idle=true
#spring.shardingsphere.datasource.master0.test-on-borrow=false
#spring.shardingsphere.datasource.master0.test-on-return=false
#spring.shardingsphere.datasource.master0.pool-prepared-statements=false
#
### 开发环境下开启方便调试
#spring.shardingsphere.props.sql.show=true


# MySQL
#spring.datasource.druid.driver-class-name = com.mysql.cj.jdbc.Driver
#spring.datasource.druid.url = jdbc:mysql://127.0.0.1:3306/oim?serverTimezone=GMT%2B8&useUnicode=true&&useSSL=false&useCompression=true&zeroDateTimeBehavior=convertToNull&allowPublicKeyRetrieval=true
#spring.datasource.druid.username = root
#spring.datasource.druid.password = 123456
#
# Oracle
#spring.datasource.druid.driver-class-name = oracle.jdbc.driver.OracleDriver
#spring.datasource.druid.url = jdbc:oracle:thin:@//127.0.0.1:1521/oim
#spring.datasource.druid.username = oim
#spring.datasource.druid.password = 123456
#
# SQLServer
#spring.datasource.druid.driver-class-name = com.microsoft.sqlserver.jdbc.SQLServerDriver
#spring.datasource.druid.url = jdbc:sqlserver://192.168.200.120:1433;databaseName=oim
#spring.datasource.druid.username = sa
#spring.datasource.druid.password = 123456

# H2
spring.datasource.druid.driver-class-name = org.h2.Driver
spring.datasource.druid.url = jdbc:h2:file:~/.oims/oim
spring.datasource.druid.username = root
spring.datasource.druid.password = 123456

spring.datasource.druid.name = DataSource-${spring.application.name}
# 关掉web sql监控
spring.datasource.druid.web-stat-filter.enabled = false
spring.datasource.druid.stat-view-servlet.enabled = false
# 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
spring.datasource.druid.initial-size = 5
# 最大连接池数量
spring.datasource.druid.max-active = 100
# 最小连接池数量
spring.datasource.druid.min-idle = 5
# 获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
spring.datasource.druid.max-wait = 60000
# 连接保持空闲而不被驱逐的最小时间
spring.datasource.druid.min-evictable-idle-time-millis = 300000
# 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
spring.datasource.druid.validation-query = SELECT 1 FROM DUAL
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle = true
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow = false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-return = false
# 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
spring.datasource.druid.pool-prepared-statements = false



# 文件上传配置
# 文件保持在服务器磁盘的根目录路径
oim.server.config.file.upload-path=upload
# 上传文件后可下载文件的服务器地址，用于生成下载路径(默认空为当前服务器ip)
oim.server.config.file.request-address=
# 文件下载路径中的根目录。方便拦截器开放此路径
oim.server.config.file.request-prefix=/file

###################################################################
# 以下配置并不是为服务器启动时所需要的配置、因为如上面配置，有聊天服务、文件服务等服务，为了后面客户
#端方便升级、负载均衡等，这些服务器配置并没有直接配置死在客户端，而是通过一个接口获取聊天、文件等服
#务器地址等信息。当下面配置为空的时候，系统会自动获取当前服务的IP、端口信息。但是当服务通过路由映射，
#获取配了网关、负载均衡等情况时。系统获取本机的信息时无法访问的。所以就需要配置并开发下面配置，以便
#客户端可以访问
#服务地址配置分别有 自动发现本机地址、配置文件中指定、数据库中配置
# 优先级 数据库 > 配置文件 > 自动发现
###################################################################


# 是否自动发现服务器地址(当服务器地址不能直接被访问时，设置未false，并在下面的配置中配置可访问的地址或者配置在数据库)
oim.server.config.portal.address.auto-discover=true

# 主业务(接口服务) http 服务地址
#main("main"), file("file"), video("video"), voice("voice");
#oim.server.config.portal.address.server-infos[0].code=main
#oim.server.config.portal.address.server-infos[0].enabled=true
#IPv4\IPv6\URL	 
#oim.server.config.portal.address.server-infos[0].addresses[0].address-type=URL
#tcp\udp\ftp\http\https\ws\wss
#oim.server.config.portal.address.server-infos[0].addresses[0].protocol=http
#oim.server.config.portal.address.server-infos[0].addresses[0].enabled=true
#oim.server.config.portal.address.server-infos[0].addresses[0].address=http://127.0.0.1
#oim.server.config.portal.address.server-infos[0].addresses[0].port=10000

# 主业务(聊天服务) tcp 服务地址
#main("main"), file("file"), video("video"), voice("voice");
#oim.server.config.portal.address.server-infos[0].code=main
#oim.server.config.portal.address.server-infos[0].enabled=true
#IPv4\IPv6\URL	 
#oim.server.config.portal.address.server-infos[0].addresses[0].address-type=IPv4
#tcp\udp\ftp\http\https\ws\wss
#oim.server.config.portal.address.server-infos[0].addresses[0].protocol=http
#oim.server.config.portal.address.server-infos[0].addresses[0].enabled=true
#oim.server.config.portal.address.server-infos[0].addresses[0].address=127.0.0.1
#oim.server.config.portal.address.server-infos[0].addresses[0].port=10001

# 主业务(聊天服务) websocket 服务地址
#main("main"), file("file"), video("video"), voice("voice");
#oim.server.config.portal.address.server-infos[0].code=main
#oim.server.config.portal.address.server-infos[0].enabled=true
#IPv4\IPv6\URL	 
#oim.server.config.portal.address.server-infos[0].addresses[0].address-type=URL
#tcp\udp\ftp\http\https\ws\wss
#oim.server.config.portal.address.server-infos[0].addresses[0].protocol=ws
#oim.server.config.portal.address.server-infos[0].addresses[0].enabled=true
#oim.server.config.portal.address.server-infos[0].addresses[0].address=ws://127.0.0.1:10002/oim/websocket
#oim.server.config.portal.address.server-infos[0].addresses[0].port=10002



#文件服务地址
##main("main"), file("file"), video("video"), voice("voice");
#oim.server.config.portal.address.server-infos[0].code=file
#oim.server.config.portal.address.server-infos[0].enabled=true
##IPv4\IPv6\URL	 
#oim.server.config.portal.address.server-infos[0].addresses[0].address-type=URL
##tcp\udp\ftp\http\https\ws\wss
#oim.server.config.portal.address.server-infos[0].addresses[0].protocol=http
#oim.server.config.portal.address.server-infos[0].addresses[0].enabled=true
#oim.server.config.portal.address.server-infos[0].addresses[0].address=http://127.0.0.1:10000
#oim.server.config.portal.address.server-infos[0].addresses[0].port=10000
